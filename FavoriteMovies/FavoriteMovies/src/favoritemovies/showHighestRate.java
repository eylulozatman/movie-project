/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package favoritemovies;

import java.util.ArrayList;
import java.util.Iterator;

/**
 *
 * @author DELL
 */
public class showHighestRate extends javax.swing.JFrame {

    
    ArrayList<Double>ratings;
     ArrayList<Movie>all_movies;
    public ArrayList<Movie> getAll_movies() {
        return all_movies;
    }

    public void setAll_movies(ArrayList<Movie> all_movies) {
        this.all_movies = all_movies;
    }
    
    
    public showHighestRate() {
        ratings = new ArrayList();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genrebox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        titlelbl = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("show highest rate");
        setBackground(new java.awt.Color(204, 204, 255));

        genrebox.setBackground(new java.awt.Color(204, 204, 255));
        genrebox.setForeground(new java.awt.Color(102, 102, 255));
        genrebox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Drama", "Action", "Comedy", "Romance", "Mystery", "Sci-Fi", "Horror", " " }));

        jLabel1.setFont(new java.awt.Font("Tw Cen MT", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 153, 255));
        jLabel1.setText("genre");

        jButton1.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(153, 153, 255));
        jButton1.setText("SHOW");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        titlelbl.setBackground(new java.awt.Color(0, 0, 0));
        titlelbl.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        titlelbl.setForeground(new java.awt.Color(255, 51, 102));

        jButton2.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(153, 153, 255));
        jButton2.setText("BACK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(genrebox, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addComponent(jButton2))
                    .addComponent(titlelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(68, 68, 68))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(genrebox, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addComponent(titlelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      
        double maxrate;
        if(genrebox.getSelectedIndex()==0)
        {
            for(int i =0 ; i< all_movies.size(); i++)
            {
                if(all_movies.get(i).getGenre().equals(genrebox.getSelectedItem().toString()))
                {
                       
                   ratings.add(all_movies.get(i).getAvgRating());
                    
                }
                
            }
            
           maxrate = sort();
           for(int i =0; i< all_movies.size(); i++)
           {
                 if(all_movies.get(i).getAvgRating()==maxrate)
                 {
                     titlelbl.setText(all_movies.get(i).getTitle());
                 }
           }
        }
         if(genrebox.getSelectedIndex()==1)
        {
            for(int i =0 ; i< all_movies.size(); i++)
            {
                if(all_movies.get(i).getGenre().equals(genrebox.getSelectedItem().toString()))
                {
                       
                   ratings.add(all_movies.get(i).getAvgRating());
                    
                }
                
            }
            
           maxrate = sort();
           for(int i =0; i< all_movies.size(); i++)
           {
                 if(all_movies.get(i).getAvgRating()==maxrate)
                 {
                     titlelbl.setText(all_movies.get(i).getTitle());
                 }
           }
        }
        if(genrebox.getSelectedIndex()==2)
        {
            for(int i =0 ; i< all_movies.size(); i++)
            {
                if(all_movies.get(i).getGenre().equals(genrebox.getSelectedItem().toString()))
                {
                       
                   ratings.add(all_movies.get(i).getAvgRating());
                    
                }
                
            }
            
           maxrate = sort();
           for(int i =0; i< all_movies.size(); i++)
           {
                 if(all_movies.get(i).getAvgRating()==maxrate)
                 {
                     titlelbl.setText(all_movies.get(i).getTitle());
                 }
           }
        }
          if(genrebox.getSelectedIndex()==3)
        {
            for(int i =0 ; i< all_movies.size(); i++)
            {
                if(all_movies.get(i).getGenre().equals(genrebox.getSelectedItem().toString()))
                {
                       
                   ratings.add(all_movies.get(i).getAvgRating());
                    
                }
                
            }
            
           maxrate = sort();
           for(int i =0; i< all_movies.size(); i++)
           {
                 if(all_movies.get(i).getAvgRating()==maxrate)
                 {
                     titlelbl.setText(all_movies.get(i).getTitle());
                 }
           }
        }  
           if(genrebox.getSelectedIndex()==4)
        {
            for(int i =0 ; i< all_movies.size(); i++)
            {
                if(all_movies.get(i).getGenre().equals(genrebox.getSelectedItem().toString()))
                {
                       
                   ratings.add(all_movies.get(i).getAvgRating());
                    
                }
                
            }
            
           maxrate = sort();
           for(int i =0; i< all_movies.size(); i++)
           {
                 if(all_movies.get(i).getAvgRating()==maxrate)
                 {
                     titlelbl.setText(all_movies.get(i).getTitle());
                 }
           }
        }  
            if(genrebox.getSelectedIndex()==5)
        {
            for(int i =0 ; i< all_movies.size(); i++)
            {
                if(all_movies.get(i).getGenre().equals(genrebox.getSelectedItem().toString()))
                {
                       
                   ratings.add(all_movies.get(i).getAvgRating());
                    
                }
                
            }
            
           maxrate = sort();
           for(int i =0; i< all_movies.size(); i++)
           {
                 if(all_movies.get(i).getAvgRating()==maxrate)
                 {
                     titlelbl.setText(all_movies.get(i).getTitle());
                 }
           }
        }  
            
            if(genrebox.getSelectedIndex()==6)
        {
            for(int i =0 ; i< all_movies.size(); i++)
            {
                if(all_movies.get(i).getGenre().equals(genrebox.getSelectedItem().toString()))
                {
                       
                   ratings.add(all_movies.get(i).getAvgRating());
                    
                }
                
            }
            
           maxrate = sort();
           for(int i =0; i< all_movies.size(); i++)
           {
                 if(all_movies.get(i).getAvgRating()==maxrate)
                 {
                     titlelbl.setText(all_movies.get(i).getTitle());
                 }
           }
        }  
         
        
           
           
           
        
           
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
                this.dispose();
               funcScreen fc = new funcScreen();
               fc.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed
     private double sort() 
    {
        double max = ratings.get(0);
        for(int i = 1;  i< ratings.size(); i++)
        {
            if(ratings.get(i)>max)
            {
                max = ratings.get(i);
            }
        }
       
        
        
       return max;
      
    }
    /**
     * @param args the command line arguments
     */
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> genrebox;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel titlelbl;
    // End of variables declaration//GEN-END:variables

    
}
